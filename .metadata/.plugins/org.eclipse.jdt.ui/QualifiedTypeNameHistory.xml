<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.ObjectPostProcessor"/>
    <fullyQualifiedTypeName name="com.eic.springbootmicroservices.organizationservice.exception.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.GatewayFilter"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.reactive.ServerHttpRequest"/>
    <fullyQualifiedTypeName name="java.util.function.Predicate"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.reactive.ServerHttpResponse"/>
    <fullyQualifiedTypeName name="com.eic.springbootmicroservices.apigateway.exception.UserAPIException"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.RouteLocator"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder"/>
    <fullyQualifiedTypeName name="com.eic.springbootmicroservices.apigateway.security.JwtTokenProvider"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.eic.springbootmicroservices.apigateway.security.JwtAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.MalformedJwtException"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Claims"/>
    <fullyQualifiedTypeName name="com.eic.springboot.entity.User"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="com.eic.springboot.entity.Role"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="org.springframework.web.reactive.function.client.WebClient"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.GrantedAuthority"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="com.eic.springbootmicroservices.departmentservice.security.CustomUserDetails"/>
    <fullyQualifiedTypeName name="com.eic.springbootmicroservices.departmentservice.security.JwtAuthenticationEntryPoint"/>
    <fullyQualifiedTypeName name="com.eic.springbootmicroservices.departmentservice.security.JwtAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="org.springframework.core.ParameterizedTypeReference"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
    <fullyQualifiedTypeName name="com.eic.springbootmicroservices.departmentservice.exception.ErrorDetails"/>
    <fullyQualifiedTypeName name="com.eic.springbootmicroservices.departmentservice.entity.Department"/>
    <fullyQualifiedTypeName name="com.eic.springbootmicroservices.departmentservice.exception.DepartmentAlreadyExistsException"/>
    <fullyQualifiedTypeName name="com.eic.springbootmicroservices.employeeservice.exception.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
    <fullyQualifiedTypeName name="org.springframework.web.context.request.WebRequest"/>
    <fullyQualifiedTypeName name="com.eic.springbootmicroservices.employeeservice.exception.ErrorDetails"/>
    <fullyQualifiedTypeName name="java.time.LocalDateTime"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="com.eic.springbootmicroservices.employeeservice.entity.Employee"/>
    <fullyQualifiedTypeName name="com.eic.springbootmicroservices.employeeservice.exception.EmployeeAlreadyExistsException"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ResponseStatus"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="com.eic.springbootmicroservices.organizationservice.entity.Organization"/>
    <fullyQualifiedTypeName name="com.eic.springbootmicroservices.organizationservice.exception.OrganizationAlreadyExistsException"/>
</qualifiedTypeNameHistroy>
