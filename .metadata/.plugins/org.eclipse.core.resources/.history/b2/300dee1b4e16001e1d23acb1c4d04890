package com.eic.springbootmicroservices.departmentservice.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.eic.springbootmicroservices.departmentservice.dto.DepartmentDto;
import com.eic.springbootmicroservices.departmentservice.service.DepartmentService;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import lombok.AllArgsConstructor;

@Tag(
		name = "Department Controller",
		description = "Department Controller REST API's"
		)
@RestController
@AllArgsConstructor
@RequestMapping("/api/departments")
public class DepartmentController {
	
	private DepartmentService departmentService;
	@Operation(
			summary = "Save Department REST API",
			description = "Save Department REST API is used to save department to the database"
			)
	@ApiResponse(
			responseCode = "201",
			description = "HTTP Status 201 Created"
			
			)
	@PostMapping
	public ResponseEntity<DepartmentDto> saveDepartment(@RequestBody DepartmentDto departmentDto){
		DepartmentDto savedDepartmentDto = departmentService.saveDepartment(departmentDto);
		return new ResponseEntity<>(savedDepartmentDto,HttpStatus.CREATED);
	}
	
	@GetMapping("{department-code}")
	public ResponseEntity<DepartmentDto> getDepartment(@PathVariable("department-code") String departmentCode){
		DepartmentDto departmentDto = departmentService.getDepartmentByCode(departmentCode);
		return new ResponseEntity<DepartmentDto>(departmentDto, HttpStatus.OK);
	}

}
