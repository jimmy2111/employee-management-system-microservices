package com.eic.springbootmicroservices.departmentservice.service.impl;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.ArgumentMatchers.eq;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.when;

import java.util.Optional;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.mockito.junit.jupiter.MockitoExtension;
import org.modelmapper.ModelMapper;

import com.eic.springbootmicroservices.departmentservice.dto.DepartmentDto;
import com.eic.springbootmicroservices.departmentservice.entity.Department;
import com.eic.springbootmicroservices.departmentservice.repository.DepartmentRepository;

@ExtendWith(MockitoExtension.class)
class DepartmentServiceImplTest {

	@InjectMocks
	private DepartmentServiceImpl departmentServiceImpl;
	
	@Mock
	private DepartmentRepository departmentRepository;
	
	
	private ModelMapper modelMapper;
	
	private DepartmentDto departmentDto;
	
	private Department department;
	@BeforeEach
	void setup() {
		MockitoAnnotations.openMocks(this);
		modelMapper = new ModelMapper();
		departmentServiceImpl = new DepartmentServiceImpl(departmentRepository, modelMapper);
		departmentDto = new DepartmentDto(1L, "IT", "Information Technology", "IT001");
		department = modelMapper.map(departmentDto, Department.class);
		
	}
	
	@Test
	void testSaveDepartment() {
		when(departmentRepository.save(any())).thenReturn(department);
		DepartmentDto result = departmentServiceImpl.saveDepartment(departmentDto);
		assertEquals(departmentDto.getDepartmentCode(), result.getDepartmentCode());
	}
	@Test
	void testGetDepartmentByCode() {
		when(departmentRepository.findByDepartmentCode(any())).thenReturn(Optional.of(department));
		DepartmentDto result = departmentServiceImpl.getDepartmentByCode("IT001");
		assertEquals(departmentDto.getDepartmentCode(), result.getDepartmentCode());
	}

}
